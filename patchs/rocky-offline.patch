diff --git a/ansible/roles/baremetal/tasks/install.yml b/ansible/roles/baremetal/tasks/install.yml
index b6def4ea4..59705c4fc 100644
--- a/ansible/roles/baremetal/tasks/install.yml
+++ b/ansible/roles/baremetal/tasks/install.yml
@@ -1,10 +1,4 @@
 ---
-- name: Update apt cache
-  apt:
-    update_cache: yes
-  become: True
-  when: ansible_os_family == 'Debian'
-
 # TODO(inc0): Gates don't seem to have ufw executable, check for it instead of ignore errors
 - name: Set firewall default policy
   become: True
@@ -43,40 +37,6 @@
   changed_when: false
   register: running_containers

-- name: Install apt packages
-  package:
-    name: "{{ item }}"
-    state: present
-  become: True
-  with_items: "{{ debian_pkg_install }}"
-  when:
-    - ansible_os_family == 'Debian'
-    - item != ""
-  register: apt_install_result
-
-- name: Install deltarpm packages
-  package:
-    name: "{{ item }}"
-    state: present
-    update_cache: yes
-  become: True
-  with_items:
-    - deltarpm
-  when: ansible_os_family == 'RedHat'
-
-- name: Install yum packages
-  package:
-    name: "{{ item }}"
-    state: present
-    update_cache: yes
-  become: True
-  with_items: "{{ redhat_pkg_install }}"
-  when: ansible_os_family == 'RedHat'
-  register: yum_install_result
-
-# If any packages were updated, and any containers were running, wait for the
-# daemon to come up and start all previously running containers.
-
 - block:
     - name: Wait for Docker to start
       command: docker info
@@ -91,60 +51,7 @@
       command: "docker start {{ running_containers.stdout }}"
       become: true
   when:
-    - install_result is changed
     - running_containers.rc == 0
     - running_containers.stdout != ''
   vars:
     install_result: "{{ yum_install_result if ansible_os_family == 'RedHat' else apt_install_result }}"
-
-- name: Install virtualenv packages
-  package:
-    name: python-virtualenv
-    state: present
-  become: True
-  when: virtualenv is not none
-
-- name: Install pip
-  easy_install:
-    name: pip
-    virtualenv: "{{ virtualenv is none | ternary(omit, virtualenv) }}"
-    virtualenv_site_packages: "{{ virtualenv is none | ternary(omit, virtualenv_site_packages) }}"
-  become: True
-  when: easy_install_available
-
-- name: Install latest pip in the virtualenv
-  pip:
-    name: pip
-    state: latest
-    virtualenv: "{{ virtualenv }}"
-    virtualenv_site_packages: "{{ virtualenv_site_packages }}"
-  become: True
-  when: virtualenv is not none
-
-- name: Install docker SDK for python
-  pip:
-    name: docker
-    state: latest
-    virtualenv: "{{ virtualenv is none | ternary(omit, virtualenv) }}"
-    virtualenv_site_packages: "{{ virtualenv is none | ternary(omit, virtualenv_site_packages) }}"
-  become: True
-
-- name: Remove packages
-  package:
-    name: "{{ item }}"
-    state: absent
-  with_items: "{{ ubuntu_pkg_removals }}"
-  become: True
-  when:
-    - ansible_distribution|lower == "ubuntu"
-    - item != ""
-
-- name: Remove packages
-  package:
-    name: "{{ item }}"
-    state: absent
-  with_items: "{{ redhat_pkg_removals }}"
-  become: True
-  when:
-    - ansible_os_family == 'RedHat'
-    - item != ""
diff --git a/ansible/roles/baremetal/tasks/pre-install.yml b/ansible/roles/baremetal/tasks/pre-install.yml
index f67300ed6..6690bd6a2 100644
--- a/ansible/roles/baremetal/tasks/pre-install.yml
+++ b/ansible/roles/baremetal/tasks/pre-install.yml
@@ -1,9 +1,4 @@
 ---
-# NOTE: raw install is required to support cloud images which do not have python installed
-- name: "Install python2 and python-simplejson"
-  become: True
-  raw: "yum install -y python python-simplejson || (apt-get update && apt-get install -y python2.7 python-simplejson)"
-
 - name: Gather facts
   setup:

@@ -47,65 +42,4 @@
   become: True
   when: create_kolla_user | bool

-- block:
-    - block:
-        - name: Install apt packages
-          apt:
-            update_cache: yes
-          become: True
-
-        - name: Install ca certs
-          package:
-            name: "{{ item }}"
-            state: latest
-          become: True
-          with_items:
-            - ca-certificates
-            - apt-transport-https
-
-        - name: Ensure apt sources list directory exists
-          file:
-            path: /etc/apt/sources.list.d
-            state: directory
-            recurse: yes
-          become: True
-
-        - name: Install docker apt gpg key
-          apt_key:
-            url: "{{ docker_apt_url }}/{{ docker_apt_key_file }}"
-            id: "{{ docker_apt_key_id }}"
-            state: present
-          become: True
-
-        - name: Enable docker apt repository
-          apt_repository:
-            repo: "{{ docker_apt_repo }}"
-            filename: docker
-          become: True
-      when: ansible_os_family == 'Debian'
-
-    - block:
-        - name: Ensure yum repos directory exists
-          file:
-            path: /etc/yum.repos.d/
-            state: directory
-            recurse: yes
-          become: True
-
-        - name: Enable docker yum repository
-          yum_repository:
-            name: docker
-            description: Docker main Repository
-            baseurl: "{{ docker_yum_baseurl }}"
-            gpgcheck: "{{ docker_yum_gpgcheck | bool }}"
-            gpgkey: "{{ docker_yum_gpgkey }}"
-          become: True

-        - name: Install docker rpm gpg key
-          rpm_key:
-            state: present
-            key: "{{ docker_yum_url }}/gpg"
-          become: True
-          when: docker_yum_gpgcheck | bool
-      when: ansible_os_family == 'RedHat'
-  when: enable_docker_repo | bool
